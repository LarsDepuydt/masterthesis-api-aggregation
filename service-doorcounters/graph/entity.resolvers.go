package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	"fmt"

	"github.com/LarsDepuydt/masterthesis-api-aggregation/service-doorcounters/graph/data"
	"github.com/LarsDepuydt/masterthesis-api-aggregation/service-doorcounters/graph/model"
)

// FindBuildingByID is the resolver for the findBuildingByID field.
func (r *entityResolver) FindBuildingByID(ctx context.Context, id string) (*model.Building, error) {
	return &model.Building{ID: id}, nil
}

// FindEntranceByID is the resolver for the findEntranceByID field.
func (r *entityResolver) FindEntranceByID(ctx context.Context, id string) (*model.Entrance, error) {
	if e, exists := data.EntranceMap[id]; exists {
		return e, nil
	}
	return nil, fmt.Errorf("entrance with ID %s not found", id)
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
